# This is an example environment file for self-hosting CodeCred.
# Copy this file to a new file named .env and fill in the values below.
# Do NOT commit your .env file to version control.

# -------------------------------------
# DATABASE CONFIGURATION
# -------------------------------------
# The connection string for your PostgreSQL database.
# If you are using the provided docker-compose.yml, this is the correct value.
DATABASE_URL="postgresql://codecred:supersecretpassword@db:5432/codecred_db"


# -------------------------------------
# GITHUB OAUTH AUTHENTICATION
# -------------------------------------
# These values are obtained by creating a new GitHub OAuth App here:
# https://github.com/settings/developers
#
# Set the "Authorization callback URL" to: http://localhost:3000/api/auth/callback/github
GITHUB_ID="YOUR_GITHUB_CLIENT_ID"
GITHUB_SECRET="YOUR_GITHUB_CLIENT_SECRET"


# -------------------------------------
# NEXTAUTH.JS CONFIGURATION
# -------------------------------------
# A secret key used to encrypt session data for NextAuth.js.
# You can generate a secure random string by running the following command in your terminal:
# openssl rand -base64 32
NEXTAUTH_SECRET="YOUR_NEXTAUTH_SECRET_KEY"


# -------------------------------------
# GITHUB API ACCESS (Optional but Recommended)
# -------------------------------------
# A GitHub Personal Access Token (PAT) can be used to increase the API
# rate limit when fetching data from the GitHub API. This is recommended for
# instances with multiple users.
#
# Create a token here: https://github.com/settings/tokens
# The token needs the `public_repo` and `read:user` scopes.
GITHUB_PAT=""

# -------------------------------------
# CRON JOB SECRET
# -------------------------------------
# This secret is used to secure the cron job endpoint.
# It should be a random string that is kept secret.
# You can generate a secure random string by running the following command in your terminal:
# openssl rand -base64 32
CRON_SECRET=""

